{"mappings":"AAGiBA,SAASC,cAAc,oBAAxC,MACMC,EAAcF,SAASC,cAAc,gBACrCE,EAAWH,SAASC,cAAc,eAClCG,EAAYJ,SAASC,cAAc,gBACnCI,EAAcL,SAASC,cAAc,kBACrCK,EAAcN,SAASC,cAAc,kBACrCM,EAAaP,SAASC,cAAc,UAK3B,IAAIO,KAOnBN,EAAYO,iBAAiB,SAAS,KACpCC,EAAMC,OAAO,IAMf,MAAMD,EAAQ,CACZE,WAAY,KACZC,UAAU,EACVF,QACE,GAAIG,KAAKD,SACP,OAEF,MAAME,EAAYP,KAAKQ,MACvBF,KAAKD,UAAW,EAEhBC,KAAKF,WAAaK,aAAY,KAgBlC,IAAiBC,GAsCjB,UAAyBC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC/Cf,EAAWgB,YAAc,GAAGJ,KAAQC,KAASC,KAAWC,G,CAnDpDE,CA2BN,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNT,EAAOW,KAAKC,MAAMN,EAAKI,GAEvBT,EAAQU,KAAKC,MAAMN,EAAMI,EAAOD,GAEhCP,EAAUS,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAE3CL,EAAUQ,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEP,E,MAAMC,E,QAAOC,E,QAASC,E,CA5CdU,CAFOxB,KAAKQ,MACOD,IAGhCZ,EAASoB,aAWEL,EAXoB,GAAGC,OAY/Bc,OAAOf,GAAOgB,SAAS,EAAG,MAX7B9B,EAAUmB,YAAcY,EAAI,GAAGf,SAC/Bf,EAAYkB,YAAcY,EAAI,GAAGd,WACjCf,EAAYiB,YAAcY,EAAI,GAAGb,UAAU,GAC1C,I,GAIP,SAASa,EAAIjB,GACX,OAAOe,OAAOf,GAAOgB,SAAS,EAAG,I","sources":["src/js/02-timer.js"],"sourcesContent":["// import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst dataForm = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst timerClock = document.querySelector('.timer');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\n\nbuttonStart.addEventListener('click', () => {\n  timer.start();\n});\n\n// function onStart() {\n//   timerId = setInterval(startTimer, 1000);\n// }\nconst timer = {\n  intervalId: null,\n  isActive: false,\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const time = convertMs(deltaTime);\n      updateClockface(time);\n      dataDays.textContent = padDays(`${days}`);\n      dataHours.textContent = pad(`${hours}`);\n      dataMinutes.textContent = pad(`${minutes}`);\n      dataSeconds.textContent = pad(`${seconds}`);\n    }, 1000);\n  },\n};\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction padDays(value) {\n  return String(value).padStart(3, '0');\n}\n\n// function getTimeComponents(time) {\n//   const days = pad(\n//     Math.floor((time % (1000 * 60 * 60 * 24 * 30)) / (1000 * 60 * 60 * 24))\n//   );\n//   const hours = pad(\n//     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//   );\n//   const mins = pad(Math.floor((time % (1000 * 60 * 24)) / (1000 * 60)));\n//   const secs = pad(Math.floor((time % (1000 * 24)) / 1000));\n//   return { days, hours, mins, secs };\n// }\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  timerClock.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n"],"names":["document","querySelector","$40d383fb392a7037$var$buttonStart","$40d383fb392a7037$var$dataDays","$40d383fb392a7037$var$dataHours","$40d383fb392a7037$var$dataMinutes","$40d383fb392a7037$var$dataSeconds","$40d383fb392a7037$var$timerClock","Date","addEventListener","$40d383fb392a7037$var$timer","start","intervalId","isActive","this","startTime","now","setInterval","value","days","hours","minutes","seconds","textContent","$40d383fb392a7037$var$updateClockface","ms","second","minute","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","String","padStart","$40d383fb392a7037$var$pad"],"version":3,"file":"02-timer.522bf46e.js.map"}