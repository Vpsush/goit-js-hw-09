{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOP,EAAQQ,MAAMC,OACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAQW,OAAOF,MAAOC,IACxCE,EAAcF,EAAGJ,GAChBO,MAAK,EAACC,SAAEA,EAAQN,MAAEA,MACjBV,EAAAiB,OAAOC,QAAQ,uBAAqBF,QAAiBN,MAAU,IAEhES,OAAM,EAACH,SAAEA,EAAQN,MAAEA,MAClBV,EAAAiB,OAAOG,QAAQ,sBAAoBJ,QAAeN,MAAU,IAE9DF,GAAOC,OAAOP,EAAQmB,KAAKV,OAI/B,SAASG,EAAeE,EAAUN,GAChC,MAAMY,EAAM,C,SAACN,E,MAAUN,GACjBa,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACTN,EAEFI,EAAQL,GAGRM,EAAON,EAAI,GAEV,IAAK,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n  for (let i = 1; i < formRef.amount.value; i++) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay+=Number(formRef.step.value)\n}\n\n\nfunction createPromise( position, delay ) {\n  const obj = {position, delay};\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) =>{\n    setTimeout(() =>{\n  if (shouldResolve) {\n    // Fulfill\n    resolve(obj)\n  } else {\n    // Reject\n    reject(obj);\n  };\n  }, 2000);\n});\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","addEventListener","e","preventDefault","delay1","Number","delay","value","i","amount","createPromise","then","position","Notify","success","catch","failure","step","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.cab1bce3.js.map"}